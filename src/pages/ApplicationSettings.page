<!--(c) Copyright 2013 Grameen Foundation USA. All rights reserved-->
<apex:page controller="ApplicationSettingsController" sidebar="false">

    <apex:sectionHeader title="{!$Label.SETTINGS}"/>
    <apex:pageMessages id="errorMessages" escape="false"/>
    <apex:includeScript value="{!URLFOR($Resource.js, 'utils.js')}" />

    <c:blockOverlay label="{!$Label.LOADING}..."/>

    <apex:form id="settingsForm">
        <apex:pageBlock id="settingsPageBlock">
            <apex:actionFunction name="save" action="{!save}" rerender="{!$Component.page.errorMessages}" oncomplete="unblockPage()">
                <apex:param name="jobFilterValue" value=""/>
            </apex:actionFunction>
            <apex:pageBlockButtons id="buttons">
                <button id="saveButton" type="button" onclick="saveSettings()" value="Save">
                    {!$Label.SAVE}
                </button>&nbsp;&nbsp;
                <button id="cancelButton" type="button" onclick="redirect('{!$Page.SurveyManager}')" value="Survey Manager">
                    {!$Label.SURVEY_HEADER_BACKTOMANAGER}
                </button>
            </apex:pageBlockButtons>
            <apex:pageBlockSection id="jobsSection"
                rendered="{!IF(setting.FilterJobsBySalesforceUser__c == 'SFUSER', true, false)}"
                columns="1" title="{!$Label.APPLICATION_SETTINGS_JOB_TASK}"
            >
                <apex:pageBlockSectionItem >
                    <apex:outputText value="{!$Label.APPLICATION_SETTINGS_JOB_FILTER_DESC}"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <input id="jobFilterAll" type="radio" name="jobFilter" value="ALL"/><label for="jobFilterAll">{!$Label.OFF}</label>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <input id="jobFilterSFUser" type="radio" name="jobFilter" value="SFUSER"/><label for="jobFilterSFUser">{!$Label.ON}</label>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <apex:pageBlockSection id="applicationVersionSettingsSection" title="{!$Label.APPLICATION_VERSIONS}"
                rendered="{!IF(applicationVersionSettingsList.size > 0, true, false)}"
                columns="1"
            >
                <apex:pageBlockSectionItem >
                    <apex:pageBlockTable value="{!applicationVersionSettingsList}" var="applicationVersionSettings">
                        <apex:column >
                            <apex:facet name="header">
                                <apex:commandLink action="{!sortData}" onclick=" blockPage();"
                                        oncomplete="unblockPage()"
                                        rerender="applicationVersionSettingsSection"
                                        value="Is Active"
                                >
                                    <apex:param value="IsActive__c" name="column" assignTo="{!sortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                            <apex:inputCheckbox value="{!applicationVersionSettings.IsActive__c}"/>
                        </apex:column>
                        <apex:column value="{!applicationVersionSettings.Id}">
                            <apex:facet name="header">
                                <apex:commandLink action="{!sortData}" onclick=" blockPage();"
                                        oncomplete="unblockPage()"
                                        rerender="applicationVersionSettingsSection"
                                        value="Record ID"
                                >
                                    <apex:param value="Id" name="column" assignTo="{!sortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                        </apex:column>
                        <apex:column value="{!applicationVersionSettings.Name}">
                            <apex:facet name="header">
                                <apex:commandLink action="{!sortData}" onclick=" blockPage();"
                                        oncomplete="unblockPage()"
                                        rerender="applicationVersionSettingsSection"
                                        value="Version Number"
                                >
                                    <apex:param value="Name" name="column" assignTo="{!sortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                        </apex:column>
                        <apex:column value="{!applicationVersionSettings.DownloadURL__c}">
                            <apex:facet name="header">
                                <apex:commandLink action="{!sortData}" onclick=" blockPage();"
                                        oncomplete="unblockPage()"
                                        rerender="applicationVersionSettingsSection"
                                        value="Download URL"
                                >
                                    <apex:param value="DownloadURL__c" name="column" assignTo="{!sortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                        </apex:column>
                        <apex:column value="{!applicationVersionSettings.CompatibleVersion__c}">
                            <apex:facet name="header">
                                <apex:commandLink action="{!sortData}" onclick=" blockPage();"
                                        oncomplete="unblockPage()"
                                        rerender="applicationVersionSettingsSection"
                                        value="Compatible Version"
                                >
                                    <apex:param value="CompatibleVersion__c" name="column" assignTo="{!sortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                        </apex:column>
                        <apex:column value="{!applicationVersionSettings.OldestConfirmedVersion__c}">
                            <apex:facet name="header">
                                <apex:commandLink action="{!sortData}" onclick=" blockPage();"
                                        oncomplete="unblockPage()"
                                        rerender="applicationVersionSettingsSection"
                                        value="Oldest Confirmed Version"
                                >
                                    <apex:param value="OldestConfirmedVersion__c" name="column" assignTo="{!sortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                        </apex:column>
                        <apex:column value="{!applicationVersionSettings.MobileAPKVersion__c}">
                            <apex:facet name="header">
                                <apex:commandLink action="{!sortData}" onclick=" blockPage();"
                                        oncomplete="unblockPage()"
                                        rerender="applicationVersionSettingsSection"
                                        value="Mobile APK Version #"
                                >
                                    <apex:param value="MobileAPKVersion__c" name="column" assignTo="{!sortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                        </apex:column>
                        <apex:column value="{!applicationVersionSettings.ReleaseDate__c}">
                            <apex:facet name="header">
                                <apex:commandLink action="{!sortData}" onclick=" blockPage();"
                                        oncomplete="unblockPage()"
                                        rerender="applicationVersionSettingsSection"
                                        value="Released Date"
                                >
                                    <apex:param value="ReleaseDate__c" name="column" assignTo="{!sortField}"/>
                                </apex:commandLink>
                            </apex:facet>
                        </apex:column>
                    </apex:pageBlockTable>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>

            <apex:pageBlockSection title="{!$Label.DEMOGRAPHIC_INFORMATION}" columns="1" id="demographicSection">
                <apex:pageMessages id="msgs" />
                <apex:pageBlockSectionItem >
                    <apex:outputText value="{!$Label.DEMOGRAPHIC_DESCRIPTION}"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    {!$Label.SURVEY_MAPPING_OBJECT} 
                    <apex:selectList id="objectList" size="1" value="{!ppiSettingsInstance.Name}"
                            onChange="changeObjectJS()"
                            style="width:155px;"
                    >
                        <apex:selectOptions value="{!objectSelectList}"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>

                <apex:pageBlockSectionItem dataStyle="width:30%;">
                    <apex:outputLabel html-class="parentId" value="Client ID"/>
                        <apex:outputpanel title="Client ID">
                        <apex:selectList id="clientIdList" html-class="selectClass" label="Client ID"
                                size="1" value="{!ppiSettingsInstance.ObjectIdApiName__c}"
                                style="width:155px;"
                        >
                            <apex:selectOptions value="{!clientIdSelectOption}"/>
                        </apex:selectList>
                        <apex:outputText html-class="field-validation-valid"></apex:outputText>
                    </apex:outputpanel>
                </apex:pageBlockSectionItem>

                <apex:pageBlockSectionItem dataStyle="width:30%;">
                    <apex:outputLabel html-class="parentId" value="Gender"/>
                        <apex:outputpanel title="Gender">
                        <apex:selectList id="genderList" html-class="selectClass" label="Gender"
                                size="1" value="{!ppiSettingsInstance.GenderApiName__c}"
                                style="width:155px;"
                        >
                            <apex:selectOptions value="{!genderSelectOption}"/>
                        </apex:selectList>
                        <apex:outputText html-class="field-validation-valid"></apex:outputText>
                    </apex:outputpanel>
                </apex:pageBlockSectionItem>

                <apex:pageBlockSectionItem dataStyle="width:30%;">
                    <apex:outputLabel html-class="parentId" value="Age"/>
                        <apex:outputpanel title="Age">
                        <apex:selectList id="ageidList" label="Age" html-class="selectClass" size="1"
                                value="{!ppiSettingsInstance.AgeApiName__c}"
                                style="width:155px;"
                        >
                            <apex:selectOptions value="{!ageSelectOption}"/>
                        </apex:selectList>
                        <apex:outputText html-class="field-validation-valid"></apex:outputText>
                    </apex:outputpanel>
                </apex:pageBlockSectionItem>

                <apex:pageBlockSectionItem dataStyle="width:30%;">
                    <apex:outputLabel html-class="parentId" value="Household members"/>
                        <apex:outputpanel title="Household members">
                        <apex:selectList id="memberList" label="Household Members" html-class="selectClass"
                                size="1" value="{!ppiSettingsInstance.HouseholdSizeApiName__c}"
                                style="width:155px;"
                        >
                            <apex:selectOptions value="{!householdMembersSelectOption}"/>
                        </apex:selectList>
                        <apex:outputText html-class="field-validation-valid"></apex:outputText>
                    </apex:outputpanel>
                </apex:pageBlockSectionItem>

                <apex:pageBlockSectionItem dataStyle="width:30%;">
                    <apex:outputLabel html-class="parentId" value="Date Joined Organization"/>
                        <apex:outputpanel title="Date Joined Organization">
                        <apex:selectList id="dateJoinedList" label="Date Joined Organization" html-class="selectClass"
                                size="1" value="{!ppiSettingsInstance.JoinedDateApiName__c}"
                                style="width:155px;"
                        >
                            <apex:selectOptions value="{!dateOfJoiningSelectOption}"/>
                        </apex:selectList>
                        <apex:outputText html-class="field-validation-valid"></apex:outputText>
                   </apex:outputpanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <apex:actionFunction name="changeObjectAF" action="{!loadFieldsbasedOnType}"
                    immediate="false" rerender="demographicSection, msgs"
                    onComplete="bindChangeEvents();unblockPage();return false;"
            >
                <apex:param name="selectFields" value=""/>
            </apex:actionFunction>
         </apex:pageBlock>
    </apex:form>

    <apex:includeScript value="{!$Resource.jquery}" />
    <apex:includeScript value="{!$Resource.jquerySimpleModal}" />
    <apex:includeScript value="{!$Resource.jquery_validate}"/>

    <script type="text/javascript">

        var validator;

        $(document).ready(function() {
            if ({!JSENCODE(setting.FilterJobsBySalesforceUser__c) == 'SFUSER'}) {
                $("#jobFilterSFUser").prop("checked", true);
            } else {
                $("#jobFilterAll").prop("checked", true);
            }

            validator = $('[id$=settingsForm]').validate(debug=true);
            bindChangeEvents();
            validateOnEvent();
            collapseSections();
        });

        function changeObjectJS() {
            blockPage();
            changeObjectAF('ResetFields');
        }

        function validateOnEvent() {
            $('[id$=clientIdList]').change(addError);
            $('[id$=memberList]').change(addError);
            $('[id$=genderList]').change(addError);
            $('[id$=ageidList]').change(addError);
            $('[id$=dateJoinedList]').change(addError);
            validator.settings.showErrors = showErrors;
        }

        function addError(e) {
            var inThisLoop = false;
            var elementErrorMap = {};
            checkExistingErrors();

            $('[id$=settingsForm]').find("select").each(function(index, element) {
                $('[id$=settingsForm]').find("select").each(function(index, innerElement) {
                    if($(innerElement).attr('value') != "" && $(element).attr('value') == $(innerElement).attr('value')) {
                        if($(innerElement).attr('id') != $(element).attr('id')) {
                            elementErrorMap[$(element).attr('id')] =
                                "The field '"+$(element).find(":selected").text()
                                    + "' is already selected in '"
                                    + $(innerElement).parent().attr('title') + "'";
                            elementErrorMap[$(innerElement).attr('id')] =
                                "The field '"+$(element).find(":selected").text()
                                    + "' is already selected in '"
                                    + $(element).parent().attr('title') + "'";
                            inThisLoop = true;
                        }
                    }
                });
            });
            if (inThisLoop) {
                validator.showErrors(elementErrorMap);
                return false;
            }
        }

        function showErrors(errorMessage, errormap, errorlist) {
            var val = this;
            errormap.forEach(function(error, index) {
                val.settings.highlight.call(val, error.element, val.settings.errorClass, val.settings.validClass);
                $(error.element).siblings("span.field-validation-valid, span.field-validation-error").html($("<span></span>").html(error.message)).addClass("field-validation-error").removeClass("field-validation-valid").show();
            });
        }

        // Save the setting
        function saveSettings() {
            // Add the job filter setting
            if(isFormValid()){
                blockPage("{!$Label.SAVING}...");
                if ($('#jobFilterSFUser').is(':checked')) {
                    save($('#jobFilterSFUser').val());
                } else if ($('#jobFilterAll').is(':checked')) {
                    save($('#jobFilterAll').val());
                } else {
                    save('ALL');
                }
            }
            return false;
        }

        function checkExistingErrors() {
            var errorLabels = {};
            var invalidFields = $('[id$=settingsForm]').find("." + validator.settings.errorClass);
            if (invalidFields.length) {
                invalidFields.each(function(index, field) {
                    if ($(field).valid()) {
                        errorLabels[$(field).attr('id')] = "";
                    }
                });
            }
            validator.showErrors(errorLabels);
            invalidFields.each(function(index, field) {
                $(field).removeClass(validator.settings.errorClass);
            });
        }

        isFormValid = function(form) {
            form = form ? form : $("form");
            return $(form).find("input.error, select.error, textarea.error").length>0 ? false: true;
        };

        function bindChangeEvents() {
            $('.selectClass').bind('change', function(){
            });
            validateOnEvent();
        }

        // Array for pageblock sections that needs to be collapsible by default
        var collapsibleSections = [];
        function collapseSections() {
            populateSectionsToCollapse();
            collapsibleSections.forEach(function(element) {
                if (element != null) {
                    twistSection(element.getElementsByTagName('img')[0]);
                }
            });
        }

        function populateSectionsToCollapse() {
            collapsibleSections.push(
                document.getElementById(
                    '{!$Component.settingsForm.settingsPageBlock.applicationVersionSettingsSection}'
                )
            );
            collapsibleSections.push(
                document.getElementById(
                    '{!$Component.settingsForm.settingsPageBlock.demographicSection}'
                )
            );
        }
    </script>

</apex:page>
