<!--(c) Copyright 2013 Grameen Foundation USA. All rights reserved-->
<apex:page sidebar="false" standardController="PerformanceTarget__c" tabStyle="PerformanceTargetManager__tab"
extensions="CreateJobTargetController" id="page">

    <!-- TITLES -->
    <apex:sectionHeader title="{!$Label.JOB_TARGET_TITLE}" subtitle="{!$Label.JOB_TARGET_UPDATE_TARGET_TITLE}" rendered="{!isEditing}"/>
    <apex:sectionHeader title="{!$Label.JOB_TARGET_TITLE}" subtitle="{!$Label.JOB_TARGET_NEW_TARGET_TITLE}" rendered="{!NOT(isEditing)}"/>

    <!-- COMPONENTS -->
    <c:blockOverlay label="{!$Label.LOADING}..."/>
    <c:lookupPopup />

    <script type="text/javascript" src="/jslibrary/1331837151000/sfdc/main.js"/>
    <script src="/soap/ajax/25.0/connection.js" type="text/javascript"/>
    <apex:includeScript value="{!URLFOR($Resource.js, 'utils.js')}"/>

    <!-- CSS -->
    <style type="text/css">

        .general{
            width: 50%;
            margin-left: 25%;
        }

        .mobile_user_target_value{
            width: 50%;
            border: solid black 2px;
            margin-left: 25%;
        }

        .td_user_name{
            border-right: solid black 1px !important;
            text-align: left;
            vertical-align:middle !important;
            padding-left: 10px;
        }

        .td_target_value{
            text-align: center !important;
        }

        .target_value{
            width: 30px;
            text-align: center;
            border-left: 3px solid #c00;
        }

        .time_container{
            margin-left: 25%;
        }

        .even{
            background-color: #FFFFFF;
        }

        .period{
            display: inherit;
            margin-left: 5px;
            font-style: italic;
            font-weight: normal;
        }

        .bold{
            font-weight: bold;
        }

        .general_inputs{
            width: 300px;
            border-left: 3px solid #c00;
        }

        .save_popup{
            background-color: #F8F8F8;
            border-width: 2px;
            border-style: solid;
            z-index: 99999999;
            left: 32%;
            padding: 10px;
            position: absolute;
            display: none;
            width: 449px;
            top: 50%;
            height: auto;
        }

        .popup_button{
            float:right;
        }

        .link{
            font-weight: normal !important;
            color:blue !important;
        }

    </style>
    <!-- HTML -->
    <apex:pageMessages id="messages" escape="false" />

    <apex:form id="form">
        <apex:pageBlock id="targetData" mode="edit">
            <!-- Hidden input to bind performance end date to the controller -->
            <apex:inputText id="endDate" styleClass="hidden" label="" value="{!PerformanceTarget__c.EndDate__c}" required="true" rendered="false"/>

            <!-- BUTTONS -->
            <div class="buttons">
                <apex:commandButton id="btnSaveTop" value="{!$Label.SAVE}" onclick="return save()"/>
                <input id="btnCancelTop" class="btn" type="button" value="{!$Label.CANCEL}" onclick="redirect('{!$Page.PerformanceTargetManager}')"/>
            </div>

            <!-- GENERAL -->
            <apex:pageBlockSection columns="2" title="{!$Label.GENERAL}" collapsible="false" id="general">
                <apex:inputText id="name" styleClass="general_inputs" onchange="validateInput(this)" label="" value="{!performanceTarget.Name}" required="true">
                    <label class="required">{!$Label.JOB_TARGET_NAME}</label>&nbsp;&nbsp;
                </apex:inputText>

                <apex:selectList id="job_select" onblur="validateInput(this)" disabled="{!isEditing}" styleClass="general_inputs" label="" value="{!performanceTarget.JobTemplate__c}" size="1">
                    <apex:selectOption itemLabel="----" itemValue=""/>
                    <apex:selectOptions value="{!jobOptions}"/>
                    <label>{!$Label.JOB_TEMPLATE_SELECT}</label>&nbsp;&nbsp;
                </apex:selectList>
            </apex:pageBlockSection>

            <!-- TIMEFRAME AND TARGET -->
            <apex:pageBlockSection columns="1" title="{!$Label.JOB_TARGET_TIMEFRAME_AND_TARGET}" collapsible="false" id="time_target">
                <apex:selectRadio label="" styleClass="time_container" disabled="{!isEditing}" layout="pageDirection" value="{!performanceTarget.Timeframe__c}">
                    <apex:selectOption id="week" itemLabel="{!$Label.PERFORMANCE_TARGET_WEEKLY_PERIOD}" itemValue="{!performanceWeekly}"/>
                    <apex:selectOption id="month" itemLabel="{!$Label.PERFORMANCE_TARGET_MONTHLY_PERIOD}" itemValue="{!performanceMonthly}"/>
                </apex:selectRadio>

                <apex:dataTable styleClass="mobile_user_target_value" id="mobile_user_target" value="{!assignedTargetWrappers}" var="item">
                    <apex:column styleClass="td_user_name" id="td_user_name">
                        <apex:facet name="header">{!$Label.PARTNER_USERS_SELECT}</apex:facet>
                        <apex:outputText styleClass="user_name" id="user_name" value="{!item.partnerUserName}"/>
                    </apex:column>
                    <apex:column styleClass="td_target_value" id="td_target_value_1">
                        <apex:facet name="header">
                            <apex:outputText>{!$Label.DEFAULT_TARGET_VALUE}</apex:outputText>
                        </apex:facet>
                    </apex:column>
                    <apex:column styleClass="td_target_value" id="td_target_value_2">
                        <apex:facet name="header">
                            <apex:inputText styleClass="target_value" id="target_default_value" onblur="validateInput(this)" onfocus="validateIntegerAndPositive(this)" value="{!performanceTarget.DefaultValue__c}" required="true"/>
                        </apex:facet>
                        <apex:inputText styleClass="target_value" id="target_value" onblur="validateInput(this)" onfocus="validateIntegerAndPositive(this)" value="{!item.targetValue}" required="true"/>
                    </apex:column>
                    <apex:column styleClass="td_target_value" id="td_target_value_3">
                        <apex:facet name="header">
                            <a href="#" class="link" onclick="defaultTarget()">{!$Label.APPLY_DEFAULT_TARGET_VALUE}</a>
                        </apex:facet>
                    </apex:column>
                </apex:dataTable>
            </apex:pageBlockSection>

            <!-- BUTTONS -->
            <div class="buttons">
                <apex:commandButton id="btnSaveBottom" value="{!$Label.SAVE}" onclick="return save()"/>
                <input id="btnCancelBottom" class="btn" type="button" value="{!$Label.CANCEL}" onclick="redirect('{!$Page.PerformanceTargetManager}')"/>
            </div>
        </apex:pageBlock>

        <!-- SAVE POPUP -->
        <div class="save_popup">
            <p id="popup_message"></p>
            <br/><br/><br/>
            <apex:commandButton id="save_apply" styleClass="popup_button" value="{!$Label.SAVE_AND_APPLY}" action="{!save}"/>
            <apex:commandButton id="back_edit" styleClass="popup_button" value="{!$Label.BACK_AND_EDIT}" onclick="$('.save_popup').hide(); return false;"/>
        </div>
    </apex:form>

    <!-- SCRIPTS -->
    <script type="text/javascript">

        // Boolean variable true if is editing
        var isEditing = {!isEditing};

        /**
         * Function to validate empty inputs
         *
         * @param input to validate
         */
        function validateInput(input){
            if($(input).val() == ''){
                // Handle when already has an error message to do not add another div
                if($(input).parent().find('.errorMsg').attr('class') == undefined){
                    $(input).addClass('error');
                    $(input).parent().append(errorDiv(''));
                }
            }else if($(input).val() != ''){
                $(input).removeClass('error');
                $(input).parent().find('.errorMsg').remove();
            }
        }

        /**
         * Function to validate integer inputs
         *
         * @param input to validate
         */
        function validateIntegerAndPositive(input){
            $(input).keyup(function(){
                $(input).val($(input).val().replace(/[^0-9]/g, ''));
            });
        }

        /**
         * Function to validate all inputs of the page
         *
         * @param inputs array to validate
         */
        function validateInputs(inputs){
            for(var i in inputs){
                validateInput($(inputs[i]));
            }
        }

        /**
         * Create error div to show on validations
         *
         * @param message to show into the error div
         */
        function errorDiv(message){
            // Default message
            if(message == ''){
                message = '{!JSENCODE($Label.PERFORMANCE_TARGET_ERROR_MESSAGE)}';
            }

            var errorDiv = '<div class="errorMsg"><strong>Error: </strong>'+ message +'</div>';
            return errorDiv;
        }

        /**
         * Add current period to the radio buttons
         */
        function addCurrentPeriodToOptions(){
            // Add current period to weekly option
            $('.time_container').find('input').each(function(){
					if($(this).val() == '{!performanceMonthly}'){
                    // Add bold class
                    $(this).parent().find('label').addClass('bold');
                    // Add current period to the label
                    $(this).parent().find('label').append('<p class="period">{!JSENCODE(monthlyPeriod)}</p>');
					}else if($(this).val() == '{!performanceWeekly}'){
                    // Select as default if it's a new target
                    if(!{!isEditing}) {
                        $(this).attr('checked','checked');
                    }
                    // Add bold class
                    $(this).parent().find('label').addClass('bold');
                    // Add current period to the label
                    $(this).parent().find('label').append('<p class="period">{!JSENCODE(weeklyPeriod)}</p>');
                }
            });
        }

        /**
         * Add css to table by jquery
         * Set default value
         */
        function initTableAndHeaders(){
            // Add class to tds in general table to center texts
            $('div[id*="general"]').find('td').each(function(){
                $(this).addClass('td_target_value');
            });

            // Add css to the mobile user header
            $('th[id*="td_user_nameheader"]').css({'padding-left': '10px', 'border-right': 'solid 1px black',
                'vertical-align': 'middle'});

            // Add css to the target value headers
            $('th[id*="td_target_value_1header"]').css({'padding-left': '10px', 'vertical-align': 'middle', 'width': '20%'});
            $('th[id*="td_target_value_2header"]').css({'text-align': 'center', 'width': '175px'});
            $('th[id*="td_target_value_3header"]').css({'vertical-align': 'middle'});

            // Convert value of default target to integer
            if($('input[id*="target_default_value"]').val() != ''){
                $('input[id*="target_default_value"]').val(parseInt($('input[id*="target_default_value"]').val(), 10)) ;
            }

            // Set class to diff every background row
            $('.mobile_user_target_value tbody>tr:even').addClass("even");
        }

        /**
         * Set all targets as default.
         * Remove error class and error messages when default value is not empty
         * Called by apply link
         */
        function defaultTarget(){
            if($('input[id*="target_default_value"]').val() != ''){
                // Remove all error messages
                $('input[id*="target_value"]').removeClass('error');
                $('input[id*="target_value"]').parent().find('.errorMsg').remove();
                // Put default value in all target values
                $('input[id*="target_value"]').val($('input[id*="target_default_value"]').val());
            }
        }

        // Function executed before the call to the controller to validate if page can be saved
        function save(){
            // Array of all inputs to validate
            var inputs = new Array();
            inputs.push($('select[id*="job_select"]'),
                        $('input[id*="name"]'),
                        $('input[id*="target_default_value"]'));

            // Add all target value inputs to validate
            $('input[id*="target_value"]').each(function(){
                inputs.push($(this));
            });

            // Validate inputs
            validateInputs(inputs);

            // If there is no errors then show popup
            if($('.errorMsg').attr('class') == undefined){
                // Set popup message depending if is editing or not
                if(isEditing){
                    $('#popup_message').text('{!JSENCODE($Label.PERFORMANCE_TARGET_EDITION_SAVE_POPUP_TEXT)}');
                }else{
                    $('#popup_message').text('{!JSENCODE($Label.PERFORMANCE_TARGET_SAVE_POPUP_TEXT)}');
                }

                // Show popup
                $('.save_popup').show();
            }
            return false;
        }

        $(document).ready(function(){
            initTableAndHeaders();
            addCurrentPeriodToOptions();
        });

    </script>
</apex:page>
