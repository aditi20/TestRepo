<!--(c) Copyright 2013 Grameen Foundation USA. All rights reserved-->
<apex:page controller="ObjectAssignmentController" >
    <apex:sectionHeader title="{!$Label.RECORDS_ASSIGNMENT}" subtitle="{!$Label.MANAGE_RECORDS}"/>

    <apex:includeScript value="{!$Resource.jquery}" />
    <apex:includeScript value="{!$Resource.jquerySimpleModal}" />
    <apex:includeScript value="{!URLFOR($Resource.js, 'utils.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.js, 'selectionTable.js')}"/>
    <apex:includeScript value="{!$Resource.js_utils}" />

    <c:blockOverlay label="{!$Label.LOADING}..."/>

    <style type="text/css">
        #popupTitle {
            font-weight: normal;
            font-size: large;
            margin-left: 5px;
        }

        #simplemodal-overlay {
            background-color: #000;
        }

        #simplemodal-container {
            max-height: 600px;
            overflow: hidden;
        }

        #availableRecordsContainer {
            max-height: 300px;
            overflow-y: auto;
            margin-bottom: 10px;
        }

        #selectRecordsPopup {
            overflow-y: auto;
            display: none;
            height: 600px;
        }

        #buttonsPopupSection {
            margin: 5px;
            text-align: center;
        }

        #assignedRecordsContainer {
            margin-top: 10px;
            margin-bottom: 10px;
        }

        #assignedRecords, #availableRecords {
            border: 0;
            border-spacing: 0;
            border-collapse: collapse;
        }

        #assignedRecords input, #availableRecords input {
            margin: 0;
        }

        #assignedRecords > tbody > tr > td:first-child,
        #availableRecords > tbody > tr > td:first-child {
            width: 15px;
        }

        .recordsSpan {
            font-weight: bold;
        }

        .requiredInput {
            border-left: 3px solid #c00;
        }

        #limitedResultsMessage {
            color: red;
        }
        #btnRefreshRecords {
            float : right;
        }

        .even {
            background-color: #F8F8F8;
        }

        #noRecordsMsg {
            font-style:italic;
            font-size: 7pts;
        }
    </style>

    <apex:pageMessages id="messages" />
    <apex:form id="form">
        <apex:pageBlock id="targetData" mode="edit">

            <!-- BUTTONS -->
            <div class="buttons">
                <apex:commandButton id="btnSaveTop" value="{!$Label.SAVE}" action="{!save}"
                        rerender="messages" oncomplete="unblockPage()"
                        onclick="if (pageHasErrors()) return false; else blockPage();"/>
                <input id="btnCancelTop" class="btn" type="button" value="{!$Label.CANCEL}"
                        onclick="redirect('{!$Page.MobileUserDetail}', '{!userId}')"/>
            </div>

            <!-- Select object -->
            <apex:pageBlockSection columns="1" title="{!$Label.RECORDS_ASSIGNMENT_SELECT_OBJECT}"
                    collapsible="false" id="general">
                <div id="objSelect">
                    <apex:outputText label="{!$ObjectType.Mobile_User__c.Label}"
                            value="{!contactToAssign.Name}" />
                    <apex:selectList id="selectedObject" value="{!selectedObject}"
                            label="{!$Label.INDICATOR_OBJ_SELECT}" multiselect="false" size="1"
                            styleClass="requiredInput objectSelect" onblur="validateRequiredInput(this)"
                            onchange="clearAssignedRecords()" disabled="{!isEdition}" >
                        <apex:selectOptions value="{!orgObjects}"/>
                    </apex:selectList>
                </div>

                <apex:inputHidden id="associatedIds" value="{!associatedIds}" />
            </apex:pageBlockSection>

            <apex:pageBlockSection columns="1" title="{!$Label.RECORDS_ASSIGNMENT_MANAGE_RECORDS}"
                    collapsible="false" id="manageRecords">
                <input id="btnAssignRecords" type="button" onclick="loadEmptyPopup();"
                        class="btn" value="{!$Label.RECORDS_ASSIGNMENT_ASSIGN_RECORDS}" />
                <input id="btnUnassignRecords" type="button" onclick="unassignSelectedRecords();"
                        class="btn" value="{!$Label.RECORDS_ASSIGNMENT_UNASSIGN_RECORDS}" />
                <div id="assignedRecordsContainer" />
                <div id="assignedRecordsCount" />
            </apex:pageBlockSection>


            <!-- BUTTONS -->
            <div class="buttons">
                <apex:commandButton id="btnSaveBot" value="{!$Label.SAVE}" action="{!save}"
                        rerender="messages" oncomplete="unblockPage()"
                        onclick="if (pageHasErrors()) {return false;} else {blockPage();}"/>
                <input id="btnCancelBot" class="btn" type="button" value="{!$Label.CANCEL}"
                        onclick="redirect('{!$Page.MobileUserDetail}', '{!userId}')"/>
            </div>
        </apex:pageBlock>

        <div id="selectRecordsPopup">
            <apex:pageBlock id="assignRecords" mode="edit">
                <br />
                <h2 id="popupTitle" >{!$Label.RECORDS_ASSIGNMENT_ASSIGN_RECORDS}</h2>
                <br />
                <br />
                <apex:pageBlockSection title="{!$Label.RECORDS_ASSIGNMENT_FILTER_SECTION}" columns="1">
                    <c:fieldFilter />
                    <input id="btnRefreshRecords" type="button" onclick="getRecordsToAssign();"
                            class="btn" value="{!$Label.RECORDS_ASSIGNMENT_REFRESH_BTN}" />
                </apex:pageBlockSection>
                <apex:pageBlockSection title="{!$Label.RECORDS_ASSIGNMENT_SELECT_RECORDS}"
                        columns="1" collapsible="false" id="selectRecords">
                    <div id="availableRecordsContainer" ><span id="helpMsg">{!$Label.RECORDS_ASSIGNMENT_HELP_MSG}</span></div>
                    <div id="recordCount" />
                </apex:pageBlockSection>

                <div id="buttonsPopupSection">
                    <input id="btnSubmit" type="button" onclick="submitSelectedRecords();"
                            class="btn" value="{!$Label.RECORDS_ASSIGNMENT_SUBMIT}" />
                    <input id="btnCancel" class="btn" type="button" value="{!$Label.CANCEL}"
                            onclick="cancelPopup();"/>
                </div>
            </apex:pageBlock>
        </div>
    </apex:form>

    <script>

        $(document).ready(function() {
            // Hack to remove the required reference from the popup
            $('#selectRecordsPopup .pbSubExtra').remove();
            if ({!isEdition}) {
                getAssignedRecords();
            }

            orderObjectList();
            $("select[id*='selectedObject']").val('{!selectedObject}');
        });

        /**
         * Order the list of the objects
         */
        function orderObjectList() {

            var orderedOptions = $(".objectSelect option");
            orderedOptions.sort(function(a,b) {
                if (a.text > b.text) {
                    return 1;
                } else if (a.text < b.text) {
                    return -1;
                } else {
                    return 0;
                }
            })

            $(".objectSelect").empty().append(orderedOptions);
        }
        var records;
        var tableBuilderForAssignedRecords = new SelectionTableBuilder(
            function (record) {
                return record.Id;
            },
            function (record) {
                return htmlEncode(record.Name);
            },
            function (record) {
                return [htmlEncode(record.Name)];
            }
        );
        var tableBuilderForAvailableRecords = new SelectionTableBuilder(
            function (record) {
                return record.Id;
            },
            function (record) {
                return htmlEncode(record.Name);
            },
            function (record) {
                return [htmlEncode(record.Name)];
            }
        );


        /**
         * Get the assigned records from the server
         */
        function getAssignedRecords() {
            var selectedObject = $("select[id*='selectedObject']").val()
            if (selectedObject == '') {
                alert('{!JSENCODE($Label.RECORDS_ASSIGNMENT_SELECT_OBJECT_ERROR)}');
            } else {
                blockPage();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ObjectAssignmentController.getAssignedRecords}',
                    selectedObject,
                    $('input[id*="associatedIds"]').val(),
                    function(result, event) {
                        if (event.status) {
                            records = $.parseJSON(result);
                            if (records.length == 0) {
                                alert('{!JSENCODE($Label.RECORDS_ASSIGNMENT_NO_RECORDS)}');
                            } else {
                                loadAssignedRecordsTable(records);
                            }
                            unblockPage();
                        } else {
                            unblockPage();
                            alert('{!JSENCODE($Label.RECORDS_ASSIGNMENT_SELECTED_OBJECT_ERROR)}');
                        }
                    },
                    {escape: false}
                );
            }
        }

        /**
         * Get the records from the server
         */
        function getRecordsToAssign() {
            var wrapperFilters = getFilterObjects();
            var selectedObject = $("select[id*='selectedObject']").val();
            if (selectedObject == '') {
                alert('{!JSENCODE($Label.RECORDS_ASSIGNMENT_SELECT_OBJECT_ERROR)}');
            } else {
                blockPage();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ObjectAssignmentController.getNonAssignedRecords}',
                    selectedObject,
                    $('input[id*="associatedIds"]').val(),
                    wrapperFilters,
                    function(result, event) {
                        if (event.status) {
                            records = $.parseJSON(result);
                            if (records.length == 0) {
                                unblockPage();
                                $("#availableRecordsContainer").empty();
                                $(".recordsSpan").text('');
                                $("#availableRecordsContainer").append(
                                    $("<span />", {id : "noRecordsMsg",
                                        text : '{!JSENCODE($Label.RECORDS_ASSIGNMENT_NO_RECORDS)}'})
                                );
                            } else {
                                loadPopup();
                                unblockPage();
                            }
                        } else {
                            unblockPage();
                            alert('{!JSENCODE($Label.RECORDS_ASSIGNMENT_SELECTED_OBJECT_ERROR)}');
                        }
                    },
                    {escape: false}
                );
            }
        }

        function loadEmptyPopup(){
            var selectedObject = $("select[id*='selectedObject']").val();
            if (selectedObject != '') {
                renderFilter(selectedObject);
                showPopup();
            } else {
                alert('{!JSENCODE($Label.RECORDS_ASSIGNMENT_SELECT_OBJECT_ERROR)}');
            }

        }
        /**
         * Load the assigned records into the table
         */
        function loadAssignedRecordsTable(assignedRecords) {
            var assignedRecordsTable = $("#assignedRecords");
            var totalRecordsCount;

            if (assignedRecordsTable.length == 0) {
                totalRecordsCount = assignedRecords.length;
                var headers = [
                    $("select[id*='selectedObject'] :selected").text() +
                        " {!JSENCODE($Label.RECORDS_ASSIGNMENT_NAME)}"
                ];

                tableBuilderForAssignedRecords.tableData = {
                    id : "assignedRecords",
                    columnHeaders : headers,
                    data : assignedRecords
                };

                assignedRecordsTable = tableBuilderForAssignedRecords.buildTable();
                $("#assignedRecordsContainer").append(assignedRecordsTable);
            } else {
                tableBuilderForAssignedRecords.addRecords(assignedRecords);
                totalRecordsCount = tableBuilderForAssignedRecords.getRecordsCount();
            }

            setRecordCount(
                '#assignedRecordsCount',
                totalRecordsCount,
                '{!JSENCODE($Label.RECORDS_ASSIGNMENT_RECORDS)}'
            );

            addSalesforceStyle('assignedRecords');
        }

        function addSalesforceStyle(tableId) {
            $('#' + tableId).addClass("list");
            $('#' + tableId + ' > tbody > tr').addClass('dataRow');
            $('#' + tableId + ' > tbody > tr:first-child')
                .removeClass('dataRow').addClass('headerRow');
            $('#' + tableId + ' th').addClass("zen-deemphasize");
            $('#' + tableId + ' td').addClass("zen-deemphasize");
            $('#' + tableId + ' tr:even').addClass("even");
        }

        /**
         * Submit the records selected in the popup
         */
        function submitSelectedRecords() {
            var selectedRecordsIds = '';
            var selectedCheckboxes = $("#availableRecords tr td input:checked");
            var selectedRecords = [];

            if (selectedCheckboxes.length != 0) {
                selectedCheckboxes.each(function() {
                    selectedRecords.push({
                        Id : $(this).attr('id'),
                        Name : htmlDecode($(this).val())
                    });
                    selectedRecordsIds += $(this).attr('id') + ',';
                });

                loadAssignedRecordsTable(selectedRecords);

                $('input[id*="associatedIds"]').val(
                    $('input[id*="associatedIds"]').val() + selectedRecordsIds
                );
            }

            $.modal.close();
        }

        function unassignSelectedRecords() {
            var selectedCheckboxes = $("#assignedRecords tr td input:checked");
            var allCheckboxes = $("#assignedRecords tr td input");
            var associatedIds = '';
            var selectedObject = $("select[id*='selectedObject']").val();
            if (selectedObject == '') {
                alert('{!JSENCODE($Label.RECORDS_ASSIGNMENT_SELECT_OBJECT_ERROR)}');
            } else if (selectedCheckboxes.length == 0) {
                alert('{!JSENCODE($Label.RECORDS_ASSIGNMENT_NO_RECORDS_SELECTED_ERROR)}');
            } else {

                if (userConfirmUnassign()) {
                    allCheckboxes.each(function() {
                        if ($(this).is(':checked')) {
                            tableBuilderForAssignedRecords.removeRow($(this));
                        } else {
                            associatedIds += $(this).attr('id') + ',';
                        }
                    });

                    $('input[id*="associatedIds"]').val(associatedIds);

                    if (associatedIds == '') {
                        tableBuilderForAssignedRecords.removeTable();
                        $("#assignedRecordsCount").empty();
                        $('input[id*="btnSaveTop"]').click();
                    }

                }
                totalRecordsCount = tableBuilderForAssignedRecords.getRecordsCount();

                setRecordCount(
                    '#assignedRecordsCount',
                    totalRecordsCount,
                    '{!JSENCODE($Label.RECORDS_ASSIGNMENT_RECORDS)}'
                );
            }
        }

        function userConfirmUnassign() {
            if ($("#assignedRecords tr td input:not(:checked)").length == 0) {
                return confirm('{!JSENCODE($Label.RECORDS_ASSIGNMENT_CONFIRM_UNASSIGN_ALL)}');
            } else {
                return confirm('{!JSENCODE($Label.RECORDS_ASSIGNMENT_CONFIRM_UNASSIGN)}');
            }
        }

        /**
         * Cancel button from the popup
         */
        function cancelPopup() {
            $.modal.close();
        }

        /**
         * load the records in the popup and show it
         */
        function loadPopup() {
            var recordsContainer = getCleanContainer();
            recordsContainer.append(buildAvailableRecordsTable());
            addSalesforceStyle('availableRecords');
            $('#availableRecords input').attr('checked', true);
            setRecordCount(
                '#recordCount',
                records.length,
                '{!JSENCODE($Label.RECORDS_ASSIGNMENT_RECORDS_FOUND)}'
            );
            if (records.length == 250) {
                addMoreRecordsMessage();
            }
            showPopup();
        }

        /**
         * Get the container of the available records
         */
        function getCleanContainer() {
            var recordsContainer = $('#availableRecordsContainer');
            recordsContainer.empty();
            return recordsContainer;
        }

        /**
         * Build the table of records for the popup
         */
        function buildAvailableRecordsTable() {
            var headers = [
                $("select[id*='selectedObject'] :selected").text() +
                    " {!JSENCODE($Label.RECORDS_ASSIGNMENT_NAME)}"
            ];

            tableBuilderForAvailableRecords.tableData = {
                id : "availableRecords",
                columnHeaders : headers,
                data : records
            };

            return tableBuilderForAvailableRecords.buildTable();
        }

        function setRecordCount(containerSelector, recordsCount, message) {
            $(containerSelector).empty();
            $(containerSelector).append(
                $('<span />', {class : "recordsSpan"}).append(
                    recordsCount + ' ' + message
                )
            );
        }

        function addMoreRecordsMessage() {
            $('#recordCount').append($('<br />')).append(
                $('<span />', {id : "limitedResultsMessage"}).append(
                    '{!JSENCODE($Label.RECORDS_ASSIGNMENT_MORE_RECORDS)}'
                )
            );
        }

        function showPopup() {
            $('#selectRecordsPopup').modal({
                maxHeight : 700,
                maxWidth : 800
            });
        }

        function clearAssignedRecords() {
            $('input[id*="associatedIds"]').val('');
            $("#assignedRecords").remove();
            $("#assignedRecordsCount").empty();
        }

        function validateRequiredInput(input) {
            removeErrors(input);
            if ($(input).val() == '') {
                addErrorTo(input, '{!JSENCODE($Label.PERFORMANCE_TARGET_ERROR_MESSAGE)}');
            }
        }

        function pageHasErrors() {
            validateRequiredInput($('select[id*="selectedObject"]'));
            return $('.errorMsg').attr('class') != undefined &&
                $('input[id*="associatedIds"]').val() != '';
        }

    </script>
</apex:page>
